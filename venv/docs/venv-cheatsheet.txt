VENV (VIRTUAL ENVIRONMENT) CHEATSHEET

TABLE OF CONTENTS
=================
1. What is a Virtual Environment?
2. Creating Virtual Environments
3. Activating Virtual Environments
4. Deactivating Virtual Environments
5. Managing Dependencies

==========================================
1. WHAT IS A VIRTUAL ENVIRONMENT?
==========================================

A virtual environment (venv) is an isolated Python environment that allows you to:
    - Install packages specific to a project
    - Avoid conflicts between different projects' requirements
    - Keep your system Python installation clean
    - Ensure reproducible environments across different machines

In essence it is a bucket for your Python project with its own:
    - Python interpreter
    - pip (package installer)
    - Installed packages

==========================================
2. CREATING VIRTUAL ENVIRONMENTS
==========================================

$ python -m venv [ENVIRONMENT_NAME]
    - Creates a new virtual environment in a directory named [ENVIRONMENT_NAME]

==========================================
3. ACTIVATING VIRTUAL ENVIRONMENTS
==========================================

$ source [ENVIRONMENT_NAME]/bin/activate
    - Activates the virtual environment

After activation, you'll see the name in your terminal:
(venv) username@computer:~/project$

==========================================
4. DEACTIVATING VIRTUAL ENVIRONMENTS
==========================================

$ deactivate
    - Deactivates the current virtual environment
    - Returns to your system's global Python environment
    - Removes the environment name from your terminal

==========================================
5. MANAGING DEPENDENCIES
==========================================

With an active virtual environment:

$ pip install [PACKAGE_NAME]
    - Installs a package into the current virtual environment

$ pip install -r requirements.txt
    - Installs all packages listed in requirements.txt

$ pip freeze > requirements.txt
    - Saves all installed packages to requirements.txt

$ pip list
    - Shows all packages installed in the current environment

$ pip uninstall [PACKAGE_NAME]
    - Removes a package from the current environment